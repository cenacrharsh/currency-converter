{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","className","type","value","onChange","map","option","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","handleErrors","response","ok","Error","statusText","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","console","log","catch","error","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NA4BeA,MA5Bf,SAAqBC,GACnB,IACEC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,eAGF,OACE,gCACE,uBACEC,UAAU,QACVC,KAAK,SACLC,MAAOJ,GAAkB,IACzBK,SAAUJ,IAEZ,wBAAQI,SAAUN,EAAkBK,MAAON,EAA3C,SACGD,EAAgBS,KAAI,SAACC,GAAD,OACnB,wBAAqBH,MAAOG,EAA5B,SACGA,GADUA,YCfjBC,EACJ,uFA2FaC,MAzFf,WACE,IASIC,EAAUC,EATd,EAA8CC,mBAAS,IAAvD,mBAAOf,EAAP,KAAwBgB,EAAxB,KAGA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,qBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA4BP,mBAAS,GAArC,mBAAOZ,EAAP,KAAeoB,EAAf,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAYA,SAASC,EAAaC,GACpB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,EA2CT,OAxDIH,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAWxBU,qBAAU,WACRC,MAAMrB,GACHsB,KAAKP,GACLO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CxB,EAAmB,YAAIsB,OAAOC,KAAKH,EAAKI,SACxCtB,EAAgBkB,EAAKK,MACrBrB,EAAciB,GACdf,EAAgBc,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACY,MAAhBd,GAAsC,MAAdE,GAC1Ba,MAAM,GAAD,OAAIrB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/Cc,KAAKP,GACLO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLM,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIP,GACZd,EAAgBc,EAAKI,MAAMrB,OAE5ByB,OAAM,SAAUC,GACfH,QAAQC,IAAIE,QAGjB,CAAC5B,EAAcE,IAahB,gCACE,yCACA,cAAC,EAAD,CACElB,iBAAkBgB,EAClBjB,gBAAiB,CAAC,OAClBE,iBAAkB,SAAC4C,GAAD,OAAO5B,EAAgB4B,EAAEC,OAAOxC,QAClDJ,OAAQW,EACRV,eAlBN,SAAgC0C,GAC9BvB,EAAUuB,EAAEC,OAAOxC,OACnBkB,GAAwB,MAkBtB,qBAAKpB,UAAU,SAAf,iBACA,cAAC,EAAD,CACEJ,iBAAkBkB,EAClBnB,gBAAiBA,EACjBE,iBAAkB,SAAC4C,GAAD,OAAO1B,EAAc0B,EAAEC,OAAOxC,QAChDJ,OAAQU,EACRT,eArBN,SAA8B0C,GAC5BvB,EAAUuB,EAAEC,OAAOxC,OACnBkB,GAAwB,UCnE5BuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6621dd86.chunk.js","sourcesContent":["function CurrencyRow(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    amount,\r\n    onChangeAmount,\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"input\"\r\n        type=\"number\"\r\n        value={amount ? amount : \"0\"}\r\n        onChange={onChangeAmount}\r\n      />\r\n      <select onChange={onChangeCurrency} value={selectedCurrency}>\r\n        {currencyOptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrencyRow;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"./CurrencyRow\";\n\nconst BASE_URL =\n  \"http://api.exchangeratesapi.io/v1/latest?access_key=24dadb83e611b8401c4ffc2d6a5532c9\";\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  // console.log(currencyOptions);\n\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n    //exchange rate is always from toAmount -> fromAmount\n  }\n\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(handleErrors)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([...Object.keys(data.rates)]);\n        setFromCurrency(data.base);\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.rates[firstCurrency]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}&base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(handleErrors)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(toCurrency);\n          console.log(data);\n          setExchangeRate(data.rates[toCurrency]);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return (\n    <div>\n      <h1>Convert</h1>\n      <CurrencyRow\n        selectedCurrency={fromCurrency}\n        currencyOptions={[\"EUR\"]}\n        onChangeCurrency={(e) => setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        onChangeAmount={handleFromAmountChange}\n      />\n      <div className=\"equals\"> = </div>\n      <CurrencyRow\n        selectedCurrency={toCurrency}\n        currencyOptions={currencyOptions}\n        onChangeCurrency={(e) => setToCurrency(e.target.value)}\n        amount={toAmount}\n        onChangeAmount={handleToAmountChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}